// Copyright 2017 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-accessors; DO NOT EDIT.

package azuredevops

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (a *AgentPoolQueue) GetID() int {
	if a == nil || a.ID == nil {
		return 0
	}
	return *a.ID
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (a *AgentPoolQueue) GetLinks() map[string]Link {
	if a == nil || a.Links == nil {
		return map[string]Link{}
	}
	return *a.Links
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (a *AgentPoolQueue) GetName() string {
	if a == nil || a.Name == nil {
		return ""
	}
	return *a.Name
}

// GetPool returns the Pool field.
func (a *AgentPoolQueue) GetPool() *TaskAgentPoolReference {
	if a == nil {
		return nil
	}
	return a.Pool
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (a *AgentPoolQueue) GetURL() string {
	if a == nil || a.URL == nil {
		return ""
	}
	return *a.URL
}

// GetAllowedMappings returns the AllowedMappings field if it's non-nil, zero value otherwise.
func (b *Board) GetAllowedMappings() string {
	if b == nil || b.AllowedMappings == nil {
		return ""
	}
	return *b.AllowedMappings
}

// GetCanEdit returns the CanEdit field if it's non-nil, zero value otherwise.
func (b *Board) GetCanEdit() bool {
	if b == nil || b.CanEdit == nil {
		return false
	}
	return *b.CanEdit
}

// GetFields returns the Fields field.
func (b *Board) GetFields() *BoardFields {
	if b == nil {
		return nil
	}
	return b.Fields
}

// GetIsValid returns the IsValid field if it's non-nil, zero value otherwise.
func (b *Board) GetIsValid() bool {
	if b == nil || b.IsValid == nil {
		return false
	}
	return *b.IsValid
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (b *Board) GetLinks() map[string]Link {
	if b == nil || b.Links == nil {
		return map[string]Link{}
	}
	return *b.Links
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (b *Board) GetRevision() int {
	if b == nil || b.Revision == nil {
		return 0
	}
	return *b.Revision
}

// GetColumnType returns the ColumnType field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetColumnType() string {
	if b == nil || b.ColumnType == nil {
		return ""
	}
	return *b.ColumnType
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetDescription() string {
	if b == nil || b.Description == nil {
		return ""
	}
	return *b.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetIsSplit returns the IsSplit field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetIsSplit() bool {
	if b == nil || b.IsSplit == nil {
		return false
	}
	return *b.IsSplit
}

// GetItemLimit returns the ItemLimit field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetItemLimit() int {
	if b == nil || b.ItemLimit == nil {
		return 0
	}
	return *b.ItemLimit
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardColumn) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetColumnField returns the ColumnField field.
func (b *BoardFields) GetColumnField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.ColumnField
}

// GetDoneField returns the DoneField field.
func (b *BoardFields) GetDoneField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.DoneField
}

// GetRowField returns the RowField field.
func (b *BoardFields) GetRowField() *FieldReference {
	if b == nil {
		return nil
	}
	return b.RowField
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *BoardReference) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BoardRow) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BoardRow) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetBuildNumber returns the BuildNumber field if it's non-nil, zero value otherwise.
func (b *Build) GetBuildNumber() string {
	if b == nil || b.BuildNumber == nil {
		return ""
	}
	return *b.BuildNumber
}

// GetBuildNumberRevision returns the BuildNumberRevision field if it's non-nil, zero value otherwise.
func (b *Build) GetBuildNumberRevision() int {
	if b == nil || b.BuildNumberRevision == nil {
		return 0
	}
	return *b.BuildNumberRevision
}

// GetChangedDate returns the ChangedDate field if it's non-nil, zero value otherwise.
func (b *Build) GetChangedDate() string {
	if b == nil || b.ChangedDate == nil {
		return ""
	}
	return *b.ChangedDate
}

// GetController returns the Controller field.
func (b *Build) GetController() *BuildController {
	if b == nil {
		return nil
	}
	return b.Controller
}

// GetDefinition returns the Definition field.
func (b *Build) GetDefinition() *BuildDefinition {
	if b == nil {
		return nil
	}
	return b.Definition
}

// GetDeleted returns the Deleted field if it's non-nil, zero value otherwise.
func (b *Build) GetDeleted() bool {
	if b == nil || b.Deleted == nil {
		return false
	}
	return *b.Deleted
}

// GetDeletedBy returns the DeletedBy field.
func (b *Build) GetDeletedBy() *IdentityRef {
	if b == nil {
		return nil
	}
	return b.DeletedBy
}

// GetDeletedDate returns the DeletedDate field if it's non-nil, zero value otherwise.
func (b *Build) GetDeletedDate() string {
	if b == nil || b.DeletedDate == nil {
		return ""
	}
	return *b.DeletedDate
}

// GetDeletedReason returns the DeletedReason field if it's non-nil, zero value otherwise.
func (b *Build) GetDeletedReason() string {
	if b == nil || b.DeletedReason == nil {
		return ""
	}
	return *b.DeletedReason
}

// GetFinishTime returns the FinishTime field if it's non-nil, zero value otherwise.
func (b *Build) GetFinishTime() string {
	if b == nil || b.FinishTime == nil {
		return ""
	}
	return *b.FinishTime
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *Build) GetID() int {
	if b == nil || b.ID == nil {
		return 0
	}
	return *b.ID
}

// GetKeepForever returns the KeepForever field if it's non-nil, zero value otherwise.
func (b *Build) GetKeepForever() bool {
	if b == nil || b.KeepForever == nil {
		return false
	}
	return *b.KeepForever
}

// GetLastChangedBy returns the LastChangedBy field.
func (b *Build) GetLastChangedBy() *IdentityRef {
	if b == nil {
		return nil
	}
	return b.LastChangedBy
}

// GetLogs returns the Logs field.
func (b *Build) GetLogs() *BuildLogReference {
	if b == nil {
		return nil
	}
	return b.Logs
}

// GetOrchestrationPlan returns the OrchestrationPlan field.
func (b *Build) GetOrchestrationPlan() *TaskOrchestrationPlanReference {
	if b == nil {
		return nil
	}
	return b.OrchestrationPlan
}

// GetParams returns the Params field if it's non-nil, zero value otherwise.
func (b *Build) GetParams() string {
	if b == nil || b.Params == nil {
		return ""
	}
	return *b.Params
}

// GetPriority returns the Priority field if it's non-nil, zero value otherwise.
func (b *Build) GetPriority() string {
	if b == nil || b.Priority == nil {
		return ""
	}
	return *b.Priority
}

// GetProject returns the Project field.
func (b *Build) GetProject() *TeamProjectReference {
	if b == nil {
		return nil
	}
	return b.Project
}

// GetQuality returns the Quality field if it's non-nil, zero value otherwise.
func (b *Build) GetQuality() string {
	if b == nil || b.Quality == nil {
		return ""
	}
	return *b.Quality
}

// GetQueue returns the Queue field.
func (b *Build) GetQueue() *AgentPoolQueue {
	if b == nil {
		return nil
	}
	return b.Queue
}

// GetQueuePosition returns the QueuePosition field if it's non-nil, zero value otherwise.
func (b *Build) GetQueuePosition() int {
	if b == nil || b.QueuePosition == nil {
		return 0
	}
	return *b.QueuePosition
}

// GetQueueTime returns the QueueTime field if it's non-nil, zero value otherwise.
func (b *Build) GetQueueTime() string {
	if b == nil || b.QueueTime == nil {
		return ""
	}
	return *b.QueueTime
}

// GetRepository returns the Repository field.
func (b *Build) GetRepository() *BuildRepository {
	if b == nil {
		return nil
	}
	return b.Repository
}

// GetResult returns the Result field if it's non-nil, zero value otherwise.
func (b *Build) GetResult() string {
	if b == nil || b.Result == nil {
		return ""
	}
	return *b.Result
}

// GetRetainedByRelease returns the RetainedByRelease field if it's non-nil, zero value otherwise.
func (b *Build) GetRetainedByRelease() bool {
	if b == nil || b.RetainedByRelease == nil {
		return false
	}
	return *b.RetainedByRelease
}

// GetSourceBranch returns the SourceBranch field if it's non-nil, zero value otherwise.
func (b *Build) GetSourceBranch() string {
	if b == nil || b.SourceBranch == nil {
		return ""
	}
	return *b.SourceBranch
}

// GetStartTime returns the StartTime field if it's non-nil, zero value otherwise.
func (b *Build) GetStartTime() string {
	if b == nil || b.StartTime == nil {
		return ""
	}
	return *b.StartTime
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (b *Build) GetStatus() string {
	if b == nil || b.Status == nil {
		return ""
	}
	return *b.Status
}

// GetTriggerBuild returns the TriggerBuild field.
func (b *Build) GetTriggerBuild() *Build {
	if b == nil {
		return nil
	}
	return b.TriggerBuild
}

// GetTriggerInfo returns the TriggerInfo field.
func (b *Build) GetTriggerInfo() *TriggerInfo {
	if b == nil {
		return nil
	}
	return b.TriggerInfo
}

// GetURI returns the URI field if it's non-nil, zero value otherwise.
func (b *Build) GetURI() string {
	if b == nil || b.URI == nil {
		return ""
	}
	return *b.URI
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *Build) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetVersion returns the Version field if it's non-nil, zero value otherwise.
func (b *Build) GetVersion() string {
	if b == nil || b.Version == nil {
		return ""
	}
	return *b.Version
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (b *BuildController) GetCreatedDate() string {
	if b == nil || b.CreatedDate == nil {
		return ""
	}
	return *b.CreatedDate
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (b *BuildController) GetDescription() string {
	if b == nil || b.Description == nil {
		return ""
	}
	return *b.Description
}

// GetEnabled returns the Enabled field if it's non-nil, zero value otherwise.
func (b *BuildController) GetEnabled() bool {
	if b == nil || b.Enabled == nil {
		return false
	}
	return *b.Enabled
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BuildController) GetID() int {
	if b == nil || b.ID == nil {
		return 0
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BuildController) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (b *BuildController) GetStatus() string {
	if b == nil || b.Status == nil {
		return ""
	}
	return *b.Status
}

// GetUpdateDate returns the UpdateDate field if it's non-nil, zero value otherwise.
func (b *BuildController) GetUpdateDate() string {
	if b == nil || b.UpdateDate == nil {
		return ""
	}
	return *b.UpdateDate
}

// GetURI returns the URI field if it's non-nil, zero value otherwise.
func (b *BuildController) GetURI() string {
	if b == nil || b.URI == nil {
		return ""
	}
	return *b.URI
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *BuildController) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BuildDefinition) GetID() int {
	if b == nil || b.ID == nil {
		return 0
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BuildDefinition) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetRepository returns the Repository field.
func (b *BuildDefinition) GetRepository() *BuildRepository {
	if b == nil {
		return nil
	}
	return b.Repository
}

// GetIncludeAllProperties returns the IncludeAllProperties field if it's non-nil, zero value otherwise.
func (b *BuildDefinitionsListOptions) GetIncludeAllProperties() bool {
	if b == nil || b.IncludeAllProperties == nil {
		return false
	}
	return *b.IncludeAllProperties
}

// GetPath returns the Path field if it's non-nil, zero value otherwise.
func (b *BuildDefinitionsListOptions) GetPath() string {
	if b == nil || b.Path == nil {
		return ""
	}
	return *b.Path
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BuildDemand) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (b *BuildDemand) GetValue() string {
	if b == nil || b.Value == nil {
		return ""
	}
	return *b.Value
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BuildLogReference) GetID() int {
	if b == nil || b.ID == nil {
		return 0
	}
	return *b.ID
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (b *BuildLogReference) GetType() string {
	if b == nil || b.Type == nil {
		return ""
	}
	return *b.Type
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *BuildLogReference) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetCheckoutSubmodules returns the CheckoutSubmodules field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetCheckoutSubmodules() bool {
	if b == nil || b.CheckoutSubmodules == nil {
		return false
	}
	return *b.CheckoutSubmodules
}

// GetClean returns the Clean field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetClean() string {
	if b == nil || b.Clean == nil {
		return ""
	}
	return *b.Clean
}

// GetDefaultBranch returns the DefaultBranch field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetDefaultBranch() string {
	if b == nil || b.DefaultBranch == nil {
		return ""
	}
	return *b.DefaultBranch
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetID() string {
	if b == nil || b.ID == nil {
		return ""
	}
	return *b.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetName() string {
	if b == nil || b.Name == nil {
		return ""
	}
	return *b.Name
}

// GetRootFolder returns the RootFolder field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetRootFolder() string {
	if b == nil || b.RootFolder == nil {
		return ""
	}
	return *b.RootFolder
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetType() string {
	if b == nil || b.Type == nil {
		return ""
	}
	return *b.Type
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (b *BuildRepository) GetURL() string {
	if b == nil || b.URL == nil {
		return ""
	}
	return *b.URL
}

// GetBranch returns the Branch field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetBranch() string {
	if b == nil || b.Branch == nil {
		return ""
	}
	return *b.Branch
}

// GetBuildIDs returns the BuildIDs field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetBuildIDs() string {
	if b == nil || b.BuildIDs == nil {
		return ""
	}
	return *b.BuildIDs
}

// GetBuildNumber returns the BuildNumber field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetBuildNumber() string {
	if b == nil || b.BuildNumber == nil {
		return ""
	}
	return *b.BuildNumber
}

// GetCount returns the Count field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetCount() int {
	if b == nil || b.Count == nil {
		return 0
	}
	return *b.Count
}

// GetDefinitions returns the Definitions field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetDefinitions() string {
	if b == nil || b.Definitions == nil {
		return ""
	}
	return *b.Definitions
}

// GetDeleted returns the Deleted field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetDeleted() string {
	if b == nil || b.Deleted == nil {
		return ""
	}
	return *b.Deleted
}

// GetMaxPerDefinition returns the MaxPerDefinition field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetMaxPerDefinition() string {
	if b == nil || b.MaxPerDefinition == nil {
		return ""
	}
	return *b.MaxPerDefinition
}

// GetMaxTime returns the MaxTime field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetMaxTime() string {
	if b == nil || b.MaxTime == nil {
		return ""
	}
	return *b.MaxTime
}

// GetMinTime returns the MinTime field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetMinTime() string {
	if b == nil || b.MinTime == nil {
		return ""
	}
	return *b.MinTime
}

// GetOrder returns the Order field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetOrder() string {
	if b == nil || b.Order == nil {
		return ""
	}
	return *b.Order
}

// GetProps returns the Props field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetProps() string {
	if b == nil || b.Props == nil {
		return ""
	}
	return *b.Props
}

// GetQueues returns the Queues field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetQueues() string {
	if b == nil || b.Queues == nil {
		return ""
	}
	return *b.Queues
}

// GetReason returns the Reason field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetReason() string {
	if b == nil || b.Reason == nil {
		return ""
	}
	return *b.Reason
}

// GetRepository returns the Repository field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetRepository() string {
	if b == nil || b.Repository == nil {
		return ""
	}
	return *b.Repository
}

// GetRepoType returns the RepoType field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetRepoType() string {
	if b == nil || b.RepoType == nil {
		return ""
	}
	return *b.RepoType
}

// GetResult returns the Result field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetResult() string {
	if b == nil || b.Result == nil {
		return ""
	}
	return *b.Result
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetStatus() string {
	if b == nil || b.Status == nil {
		return ""
	}
	return *b.Status
}

// GetTags returns the Tags field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetTags() string {
	if b == nil || b.Tags == nil {
		return ""
	}
	return *b.Tags
}

// GetToken returns the Token field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetToken() string {
	if b == nil || b.Token == nil {
		return ""
	}
	return *b.Token
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (b *BuildsListOptions) GetUserID() string {
	if b == nil || b.UserID == nil {
		return ""
	}
	return *b.UserID
}

// GetAuthor returns the Author field.
func (c *Comment) GetAuthor() *IdentityRef {
	if c == nil {
		return nil
	}
	return c.Author
}

// GetCommentType returns the CommentType field if it's non-nil, zero value otherwise.
func (c *Comment) GetCommentType() string {
	if c == nil || c.CommentType == nil {
		return ""
	}
	return *c.CommentType
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (c *Comment) GetContent() string {
	if c == nil || c.Content == nil {
		return ""
	}
	return *c.Content
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *Comment) GetID() int {
	if c == nil || c.ID == nil {
		return 0
	}
	return *c.ID
}

// GetIsDeleted returns the IsDeleted field if it's non-nil, zero value otherwise.
func (c *Comment) GetIsDeleted() bool {
	if c == nil || c.IsDeleted == nil {
		return false
	}
	return *c.IsDeleted
}

// GetLastContentUpdatedDate returns the LastContentUpdatedDate field.
func (c *Comment) GetLastContentUpdatedDate() *Time {
	if c == nil {
		return nil
	}
	return c.LastContentUpdatedDate
}

// GetLastUpdatedDate returns the LastUpdatedDate field.
func (c *Comment) GetLastUpdatedDate() *Time {
	if c == nil {
		return nil
	}
	return c.LastUpdatedDate
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (c *Comment) GetLinks() map[string]Link {
	if c == nil || c.Links == nil {
		return map[string]Link{}
	}
	return *c.Links
}

// GetParentCommentID returns the ParentCommentID field if it's non-nil, zero value otherwise.
func (c *Comment) GetParentCommentID() int {
	if c == nil || c.ParentCommentID == nil {
		return 0
	}
	return *c.ParentCommentID
}

// GetPublishedDate returns the PublishedDate field.
func (c *Comment) GetPublishedDate() *Time {
	if c == nil {
		return nil
	}
	return c.PublishedDate
}

// GetLine returns the Line field if it's non-nil, zero value otherwise.
func (c *CommentPosition) GetLine() int {
	if c == nil || c.Line == nil {
		return 0
	}
	return *c.Line
}

// GetOffset returns the Offset field if it's non-nil, zero value otherwise.
func (c *CommentPosition) GetOffset() int {
	if c == nil || c.Offset == nil {
		return 0
	}
	return *c.Offset
}

// GetCommentID returns the CommentID field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetCommentID() int {
	if c == nil || c.CommentID == nil {
		return 0
	}
	return *c.CommentID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetURL() string {
	if c == nil || c.URL == nil {
		return ""
	}
	return *c.URL
}

// GetVersion returns the Version field if it's non-nil, zero value otherwise.
func (c *CommentVersionRef) GetVersion() int {
	if c == nil || c.Version == nil {
		return 0
	}
	return *c.Version
}

// GetCreated returns the Created field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetCreated() string {
	if d == nil || d.Created == nil {
		return ""
	}
	return *d.Created
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetType() string {
	if d == nil || d.Type == nil {
		return ""
	}
	return *d.Type
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (d *DeliveryPlan) GetURL() string {
	if d == nil || d.URL == nil {
		return ""
	}
	return *d.URL
}

// GetEndDate returns the EndDate field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetEndDate() string {
	if d == nil || d.EndDate == nil {
		return ""
	}
	return *d.EndDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetRevision() int {
	if d == nil || d.Revision == nil {
		return 0
	}
	return *d.Revision
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (d *DeliveryPlanTimeLine) GetStartDate() string {
	if d == nil || d.StartDate == nil {
		return ""
	}
	return *d.StartDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (d *DeliveryTeam) GetID() string {
	if d == nil || d.ID == nil {
		return ""
	}
	return *d.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (d *DeliveryTeam) GetName() string {
	if d == nil || d.Name == nil {
		return ""
	}
	return *d.Name
}

// GetArtifactID returns the ArtifactID field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactID() string {
	if f == nil || f.ArtifactID == nil {
		return ""
	}
	return *f.ArtifactID
}

// GetArtifactName returns the ArtifactName field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactName() string {
	if f == nil || f.ArtifactName == nil {
		return ""
	}
	return *f.ArtifactName
}

// GetArtifactType returns the ArtifactType field if it's non-nil, zero value otherwise.
func (f *Favourite) GetArtifactType() string {
	if f == nil || f.ArtifactType == nil {
		return ""
	}
	return *f.ArtifactType
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (f *Favourite) GetID() string {
	if f == nil || f.ID == nil {
		return ""
	}
	return *f.ID
}

// GetReferenceName returns the ReferenceName field if it's non-nil, zero value otherwise.
func (f *FieldReference) GetReferenceName() string {
	if f == nil || f.ReferenceName == nil {
		return ""
	}
	return *f.ReferenceName
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (f *FieldReference) GetURL() string {
	if f == nil || f.URL == nil {
		return ""
	}
	return *f.URL
}

// GetContentType returns the ContentType field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetContentType() string {
	if f == nil || f.ContentType == nil {
		return ""
	}
	return *f.ContentType
}

// GetEncoding returns the Encoding field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetEncoding() int {
	if f == nil || f.Encoding == nil {
		return 0
	}
	return *f.Encoding
}

// GetExtension returns the Extension field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetExtension() string {
	if f == nil || f.Extension == nil {
		return ""
	}
	return *f.Extension
}

// GetFileName returns the FileName field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetFileName() string {
	if f == nil || f.FileName == nil {
		return ""
	}
	return *f.FileName
}

// GetIsBinary returns the IsBinary field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetIsBinary() bool {
	if f == nil || f.IsBinary == nil {
		return false
	}
	return *f.IsBinary
}

// GetIsImage returns the IsImage field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetIsImage() bool {
	if f == nil || f.IsImage == nil {
		return false
	}
	return *f.IsImage
}

// GetVSLink returns the VSLink field if it's non-nil, zero value otherwise.
func (f *FileContentMetadata) GetVSLink() string {
	if f == nil || f.VSLink == nil {
		return ""
	}
	return *f.VSLink
}

// GetChangeID returns the ChangeID field if it's non-nil, zero value otherwise.
func (g *GitChange) GetChangeID() int {
	if g == nil || g.ChangeID == nil {
		return 0
	}
	return *g.ChangeID
}

// GetChangeType returns the ChangeType field if it's non-nil, zero value otherwise.
func (g *GitChange) GetChangeType() string {
	if g == nil || g.ChangeType == nil {
		return ""
	}
	return *g.ChangeType
}

// GetItem returns the Item field.
func (g *GitChange) GetItem() *GitItem {
	if g == nil {
		return nil
	}
	return g.Item
}

// GetNewContent returns the NewContent field.
func (g *GitChange) GetNewContent() *ItemContent {
	if g == nil {
		return nil
	}
	return g.NewContent
}

// GetNewContentTemplate returns the NewContentTemplate field.
func (g *GitChange) GetNewContentTemplate() *GitTemplate {
	if g == nil {
		return nil
	}
	return g.NewContentTemplate
}

// GetOriginalPath returns the OriginalPath field if it's non-nil, zero value otherwise.
func (g *GitChange) GetOriginalPath() string {
	if g == nil || g.OriginalPath == nil {
		return ""
	}
	return *g.OriginalPath
}

// GetSourceServerItem returns the SourceServerItem field if it's non-nil, zero value otherwise.
func (g *GitChange) GetSourceServerItem() string {
	if g == nil || g.SourceServerItem == nil {
		return ""
	}
	return *g.SourceServerItem
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitChange) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetChangeCounts returns the ChangeCounts field if it's non-nil, zero value otherwise.
func (g *GitCommitChanges) GetChangeCounts() map[string]int {
	if g == nil || g.ChangeCounts == nil {
		return map[string]int{}
	}
	return *g.ChangeCounts
}

// GetAuthor returns the Author field.
func (g *GitCommitRef) GetAuthor() *GitUserDate {
	if g == nil {
		return nil
	}
	return g.Author
}

// GetChangeCounts returns the ChangeCounts field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetChangeCounts() map[string]int {
	if g == nil || g.ChangeCounts == nil {
		return map[string]int{}
	}
	return *g.ChangeCounts
}

// GetChanges returns the Changes field.
func (g *GitCommitRef) GetChanges() *GitChange {
	if g == nil {
		return nil
	}
	return g.Changes
}

// GetComment returns the Comment field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetComment() string {
	if g == nil || g.Comment == nil {
		return ""
	}
	return *g.Comment
}

// GetCommentTruncated returns the CommentTruncated field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetCommentTruncated() bool {
	if g == nil || g.CommentTruncated == nil {
		return false
	}
	return *g.CommentTruncated
}

// GetCommitID returns the CommitID field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetCommitID() string {
	if g == nil || g.CommitID == nil {
		return ""
	}
	return *g.CommitID
}

// GetCommitter returns the Committer field.
func (g *GitCommitRef) GetCommitter() *GitUserDate {
	if g == nil {
		return nil
	}
	return g.Committer
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetPush returns the Push field.
func (g *GitCommitRef) GetPush() *GitPushRef {
	if g == nil {
		return nil
	}
	return g.Push
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitCommitRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetWorkItems returns the WorkItems field.
func (g *GitCommitRef) GetWorkItems() *ResourceRef {
	if g == nil {
		return nil
	}
	return g.WorkItems
}

// GetCommitID returns the CommitID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetCommitID() string {
	if g == nil || g.CommitID == nil {
		return ""
	}
	return *g.CommitID
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (g *GitItem) GetContent() string {
	if g == nil || g.Content == nil {
		return ""
	}
	return *g.Content
}

// GetContentMetadata returns the ContentMetadata field.
func (g *GitItem) GetContentMetadata() *FileContentMetadata {
	if g == nil {
		return nil
	}
	return g.ContentMetadata
}

// GetGitObjectType returns the GitObjectType field if it's non-nil, zero value otherwise.
func (g *GitItem) GetGitObjectType() string {
	if g == nil || g.GitObjectType == nil {
		return ""
	}
	return *g.GitObjectType
}

// GetIsFolder returns the IsFolder field if it's non-nil, zero value otherwise.
func (g *GitItem) GetIsFolder() bool {
	if g == nil || g.IsFolder == nil {
		return false
	}
	return *g.IsFolder
}

// GetIsSymLink returns the IsSymLink field if it's non-nil, zero value otherwise.
func (g *GitItem) GetIsSymLink() bool {
	if g == nil || g.IsSymLink == nil {
		return false
	}
	return *g.IsSymLink
}

// GetLatestProcessedChange returns the LatestProcessedChange field.
func (g *GitItem) GetLatestProcessedChange() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LatestProcessedChange
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitItem) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetObjectID returns the ObjectID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetObjectID() string {
	if g == nil || g.ObjectID == nil {
		return ""
	}
	return *g.ObjectID
}

// GetOriginalObjectID returns the OriginalObjectID field if it's non-nil, zero value otherwise.
func (g *GitItem) GetOriginalObjectID() string {
	if g == nil || g.OriginalObjectID == nil {
		return ""
	}
	return *g.OriginalObjectID
}

// GetPath returns the Path field if it's non-nil, zero value otherwise.
func (g *GitItem) GetPath() string {
	if g == nil || g.Path == nil {
		return ""
	}
	return *g.Path
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitItem) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetArtifactID returns the ArtifactID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetArtifactID() string {
	if g == nil || g.ArtifactID == nil {
		return ""
	}
	return *g.ArtifactID
}

// GetAutoCompleteSetBy returns the AutoCompleteSetBy field.
func (g *GitPullRequest) GetAutoCompleteSetBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.AutoCompleteSetBy
}

// GetClosedBy returns the ClosedBy field.
func (g *GitPullRequest) GetClosedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.ClosedBy
}

// GetClosedDate returns the ClosedDate field.
func (g *GitPullRequest) GetClosedDate() *Time {
	if g == nil {
		return nil
	}
	return g.ClosedDate
}

// GetCodeReviewID returns the CodeReviewID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetCodeReviewID() int {
	if g == nil || g.CodeReviewID == nil {
		return 0
	}
	return *g.CodeReviewID
}

// GetCompletionOptions returns the CompletionOptions field.
func (g *GitPullRequest) GetCompletionOptions() *GitPullRequestCompletionOptions {
	if g == nil {
		return nil
	}
	return g.CompletionOptions
}

// GetCompletionQueueTime returns the CompletionQueueTime field.
func (g *GitPullRequest) GetCompletionQueueTime() *Time {
	if g == nil {
		return nil
	}
	return g.CompletionQueueTime
}

// GetCreatedBy returns the CreatedBy field.
func (g *GitPullRequest) GetCreatedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.CreatedBy
}

// GetCreationDate returns the CreationDate field.
func (g *GitPullRequest) GetCreationDate() *Time {
	if g == nil {
		return nil
	}
	return g.CreationDate
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetDescription() string {
	if g == nil || g.Description == nil {
		return ""
	}
	return *g.Description
}

// GetForkSource returns the ForkSource field.
func (g *GitPullRequest) GetForkSource() *GitRef {
	if g == nil {
		return nil
	}
	return g.ForkSource
}

// GetIsDraft returns the IsDraft field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetIsDraft() bool {
	if g == nil || g.IsDraft == nil {
		return false
	}
	return *g.IsDraft
}

// GetLastMergeCommit returns the LastMergeCommit field.
func (g *GitPullRequest) GetLastMergeCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeCommit
}

// GetLastMergeSourceCommit returns the LastMergeSourceCommit field.
func (g *GitPullRequest) GetLastMergeSourceCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeSourceCommit
}

// GetLastMergeTargetCommit returns the LastMergeTargetCommit field.
func (g *GitPullRequest) GetLastMergeTargetCommit() *GitCommitRef {
	if g == nil {
		return nil
	}
	return g.LastMergeTargetCommit
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetMergeFailureMessage returns the MergeFailureMessage field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeFailureMessage() string {
	if g == nil || g.MergeFailureMessage == nil {
		return ""
	}
	return *g.MergeFailureMessage
}

// GetMergeFailureType returns the MergeFailureType field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeFailureType() string {
	if g == nil || g.MergeFailureType == nil {
		return ""
	}
	return *g.MergeFailureType
}

// GetMergeID returns the MergeID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeID() string {
	if g == nil || g.MergeID == nil {
		return ""
	}
	return *g.MergeID
}

// GetMergeOptions returns the MergeOptions field.
func (g *GitPullRequest) GetMergeOptions() *GitPullRequestMergeOptions {
	if g == nil {
		return nil
	}
	return g.MergeOptions
}

// GetMergeStatus returns the MergeStatus field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetMergeStatus() string {
	if g == nil || g.MergeStatus == nil {
		return ""
	}
	return *g.MergeStatus
}

// GetPullRequestID returns the PullRequestID field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetPullRequestID() int {
	if g == nil || g.PullRequestID == nil {
		return 0
	}
	return *g.PullRequestID
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetRepository returns the Repository field.
func (g *GitPullRequest) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetSourceRefName returns the SourceRefName field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetSourceRefName() string {
	if g == nil || g.SourceRefName == nil {
		return ""
	}
	return *g.SourceRefName
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetStatus() string {
	if g == nil || g.Status == nil {
		return ""
	}
	return *g.Status
}

// GetSupportsIterations returns the SupportsIterations field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetSupportsIterations() bool {
	if g == nil || g.SupportsIterations == nil {
		return false
	}
	return *g.SupportsIterations
}

// GetTargetRefName returns the TargetRefName field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetTargetRefName() string {
	if g == nil || g.TargetRefName == nil {
		return ""
	}
	return *g.TargetRefName
}

// GetTitle returns the Title field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetTitle() string {
	if g == nil || g.Title == nil {
		return ""
	}
	return *g.Title
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitPullRequest) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetID() int {
	if g == nil || g.ID == nil {
		return 0
	}
	return *g.ID
}

// GetIsDeleted returns the IsDeleted field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetIsDeleted() bool {
	if g == nil || g.IsDeleted == nil {
		return false
	}
	return *g.IsDeleted
}

// GetLastUpdatedDate returns the LastUpdatedDate field.
func (g *GitPullRequestCommentThread) GetLastUpdatedDate() *Time {
	if g == nil {
		return nil
	}
	return g.LastUpdatedDate
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetPublishedDate returns the PublishedDate field.
func (g *GitPullRequestCommentThread) GetPublishedDate() *Time {
	if g == nil {
		return nil
	}
	return g.PublishedDate
}

// GetPullRequestThreadContext returns the PullRequestThreadContext field.
func (g *GitPullRequestCommentThread) GetPullRequestThreadContext() *GitPullRequestCommentThreadContext {
	if g == nil {
		return nil
	}
	return g.PullRequestThreadContext
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThread) GetStatus() string {
	if g == nil || g.Status == nil {
		return ""
	}
	return *g.Status
}

// GetFilePath returns the FilePath field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCommentThreadContext) GetFilePath() string {
	if g == nil || g.FilePath == nil {
		return ""
	}
	return *g.FilePath
}

// GetLeftFileEnd returns the LeftFileEnd field.
func (g *GitPullRequestCommentThreadContext) GetLeftFileEnd() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.LeftFileEnd
}

// GetLeftFileStart returns the LeftFileStart field.
func (g *GitPullRequestCommentThreadContext) GetLeftFileStart() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.LeftFileStart
}

// GetRightFileEnd returns the RightFileEnd field.
func (g *GitPullRequestCommentThreadContext) GetRightFileEnd() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.RightFileEnd
}

// GetRightFileStart returns the RightFileStart field.
func (g *GitPullRequestCommentThreadContext) GetRightFileStart() *CommentPosition {
	if g == nil {
		return nil
	}
	return g.RightFileStart
}

// GetBypassPolicy returns the BypassPolicy field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetBypassPolicy() bool {
	if g == nil || g.BypassPolicy == nil {
		return false
	}
	return *g.BypassPolicy
}

// GetBypassReason returns the BypassReason field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetBypassReason() string {
	if g == nil || g.BypassReason == nil {
		return ""
	}
	return *g.BypassReason
}

// GetDeleteSourceBranch returns the DeleteSourceBranch field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetDeleteSourceBranch() bool {
	if g == nil || g.DeleteSourceBranch == nil {
		return false
	}
	return *g.DeleteSourceBranch
}

// GetMergeCommitMessage returns the MergeCommitMessage field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetMergeCommitMessage() string {
	if g == nil || g.MergeCommitMessage == nil {
		return ""
	}
	return *g.MergeCommitMessage
}

// GetMergeStrategy returns the MergeStrategy field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetMergeStrategy() string {
	if g == nil || g.MergeStrategy == nil {
		return ""
	}
	return *g.MergeStrategy
}

// GetSquashMerge returns the SquashMerge field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetSquashMerge() bool {
	if g == nil || g.SquashMerge == nil {
		return false
	}
	return *g.SquashMerge
}

// GetTransitionWorkItems returns the TransitionWorkItems field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetTransitionWorkItems() bool {
	if g == nil || g.TransitionWorkItems == nil {
		return false
	}
	return *g.TransitionWorkItems
}

// GetTriggeredByAutoComplete returns the TriggeredByAutoComplete field if it's non-nil, zero value otherwise.
func (g *GitPullRequestCompletionOptions) GetTriggeredByAutoComplete() bool {
	if g == nil || g.TriggeredByAutoComplete == nil {
		return false
	}
	return *g.TriggeredByAutoComplete
}

// GetDetectRenameFalsePositives returns the DetectRenameFalsePositives field if it's non-nil, zero value otherwise.
func (g *GitPullRequestMergeOptions) GetDetectRenameFalsePositives() bool {
	if g == nil || g.DetectRenameFalsePositives == nil {
		return false
	}
	return *g.DetectRenameFalsePositives
}

// GetDisableRenames returns the DisableRenames field if it's non-nil, zero value otherwise.
func (g *GitPullRequestMergeOptions) GetDisableRenames() bool {
	if g == nil || g.DisableRenames == nil {
		return false
	}
	return *g.DisableRenames
}

// GetProperties returns the Properties field.
func (g *GitPullRequestStatus) GetProperties() *Time {
	if g == nil {
		return nil
	}
	return g.Properties
}

// GetComment returns the Comment field.
func (g *GitPullRequestWithComment) GetComment() *Comment {
	if g == nil {
		return nil
	}
	return g.Comment
}

// GetPullRequest returns the PullRequest field.
func (g *GitPullRequestWithComment) GetPullRequest() *GitPullRequest {
	if g == nil {
		return nil
	}
	return g.PullRequest
}

// GetDate returns the Date field.
func (g *GitPush) GetDate() *Time {
	if g == nil {
		return nil
	}
	return g.Date
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitPush) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetPushedBy returns the PushedBy field.
func (g *GitPush) GetPushedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.PushedBy
}

// GetPushID returns the PushID field if it's non-nil, zero value otherwise.
func (g *GitPush) GetPushID() int {
	if g == nil || g.PushID == nil {
		return 0
	}
	return *g.PushID
}

// GetRepository returns the Repository field.
func (g *GitPush) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitPush) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetRepository returns the Repository field.
func (g *GitPushRef) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetCreator returns the Creator field.
func (g *GitRef) GetCreator() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.Creator
}

// GetIsLocked returns the IsLocked field if it's non-nil, zero value otherwise.
func (g *GitRef) GetIsLocked() bool {
	if g == nil || g.IsLocked == nil {
		return false
	}
	return *g.IsLocked
}

// GetIsLockedBy returns the IsLockedBy field.
func (g *GitRef) GetIsLockedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.IsLockedBy
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitRef) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRef) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetObjectID returns the ObjectID field if it's non-nil, zero value otherwise.
func (g *GitRef) GetObjectID() string {
	if g == nil || g.ObjectID == nil {
		return ""
	}
	return *g.ObjectID
}

// GetPeeledObjectID returns the PeeledObjectID field if it's non-nil, zero value otherwise.
func (g *GitRef) GetPeeledObjectID() string {
	if g == nil || g.PeeledObjectID == nil {
		return ""
	}
	return *g.PeeledObjectID
}

// GetRepository returns the Repository field.
func (g *GitRef) GetRepository() *GitRepository {
	if g == nil {
		return nil
	}
	return g.Repository
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetIsLocked returns the IsLocked field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetIsLocked() bool {
	if g == nil || g.IsLocked == nil {
		return false
	}
	return *g.IsLocked
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetNewObjectID returns the NewObjectID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetNewObjectID() string {
	if g == nil || g.NewObjectID == nil {
		return ""
	}
	return *g.NewObjectID
}

// GetOldObjectID returns the OldObjectID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetOldObjectID() string {
	if g == nil || g.OldObjectID == nil {
		return ""
	}
	return *g.OldObjectID
}

// GetRepositoryID returns the RepositoryID field if it's non-nil, zero value otherwise.
func (g *GitRefUpdate) GetRepositoryID() string {
	if g == nil || g.RepositoryID == nil {
		return ""
	}
	return *g.RepositoryID
}

// GetDefaultBranch returns the DefaultBranch field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetDefaultBranch() string {
	if g == nil || g.DefaultBranch == nil {
		return ""
	}
	return *g.DefaultBranch
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetID() string {
	if g == nil || g.ID == nil {
		return ""
	}
	return *g.ID
}

// GetIsFork returns the IsFork field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetIsFork() bool {
	if g == nil || g.IsFork == nil {
		return false
	}
	return *g.IsFork
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetParentRepository returns the ParentRepository field.
func (g *GitRepository) GetParentRepository() *GitRepositoryRef {
	if g == nil {
		return nil
	}
	return g.ParentRepository
}

// GetProject returns the Project field.
func (g *GitRepository) GetProject() *TeamProjectReference {
	if g == nil {
		return nil
	}
	return g.Project
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetSize returns the Size field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetSize() int {
	if g == nil || g.Size == nil {
		return 0
	}
	return *g.Size
}

// GetSSHURL returns the SSHURL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetSSHURL() string {
	if g == nil || g.SSHURL == nil {
		return ""
	}
	return *g.SSHURL
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetWebURL returns the WebURL field if it's non-nil, zero value otherwise.
func (g *GitRepository) GetWebURL() string {
	if g == nil || g.WebURL == nil {
		return ""
	}
	return *g.WebURL
}

// GetCollection returns the Collection field.
func (g *GitRepositoryRef) GetCollection() *TeamProjectCollectionReference {
	if g == nil {
		return nil
	}
	return g.Collection
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetID() string {
	if g == nil || g.ID == nil {
		return ""
	}
	return *g.ID
}

// GetIsFork returns the IsFork field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetIsFork() bool {
	if g == nil || g.IsFork == nil {
		return false
	}
	return *g.IsFork
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetProject returns the Project field.
func (g *GitRepositoryRef) GetProject() *TeamProjectReference {
	if g == nil {
		return nil
	}
	return g.Project
}

// GetRemoteURL returns the RemoteURL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetRemoteURL() string {
	if g == nil || g.RemoteURL == nil {
		return ""
	}
	return *g.RemoteURL
}

// GetSSHURL returns the SSHURL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetSSHURL() string {
	if g == nil || g.SSHURL == nil {
		return ""
	}
	return *g.SSHURL
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GitRepositoryRef) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetContext returns the Context field.
func (g *GitStatus) GetContext() *GitStatusContext {
	if g == nil {
		return nil
	}
	return g.Context
}

// GetCreatedBy returns the CreatedBy field.
func (g *GitStatus) GetCreatedBy() *IdentityRef {
	if g == nil {
		return nil
	}
	return g.CreatedBy
}

// GetCreationDate returns the CreationDate field.
func (g *GitStatus) GetCreationDate() *Time {
	if g == nil {
		return nil
	}
	return g.CreationDate
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetDescription() string {
	if g == nil || g.Description == nil {
		return ""
	}
	return *g.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetID() int {
	if g == nil || g.ID == nil {
		return 0
	}
	return *g.ID
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetLinks() map[string]Link {
	if g == nil || g.Links == nil {
		return map[string]Link{}
	}
	return *g.Links
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetState() string {
	if g == nil || g.State == nil {
		return ""
	}
	return *g.State
}

// GetTargetURL returns the TargetURL field if it's non-nil, zero value otherwise.
func (g *GitStatus) GetTargetURL() string {
	if g == nil || g.TargetURL == nil {
		return ""
	}
	return *g.TargetURL
}

// GetUpdatedDate returns the UpdatedDate field.
func (g *GitStatus) GetUpdatedDate() *Time {
	if g == nil {
		return nil
	}
	return g.UpdatedDate
}

// GetGenre returns the Genre field if it's non-nil, zero value otherwise.
func (g *GitStatusContext) GetGenre() string {
	if g == nil || g.Genre == nil {
		return ""
	}
	return *g.Genre
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitStatusContext) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitTemplate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (g *GitTemplate) GetType() string {
	if g == nil || g.Type == nil {
		return ""
	}
	return *g.Type
}

// GetDate returns the Date field.
func (g *GitUserDate) GetDate() *Time {
	if g == nil {
		return nil
	}
	return g.Date
}

// GetEmail returns the Email field if it's non-nil, zero value otherwise.
func (g *GitUserDate) GetEmail() string {
	if g == nil || g.Email == nil {
		return ""
	}
	return *g.Email
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (g *GitUserDate) GetName() string {
	if g == nil || g.Name == nil {
		return ""
	}
	return *g.Name
}

// GetValue returns the Value field if it's non-nil, zero value otherwise.
func (g *GraphDescriptorResult) GetValue() string {
	if g == nil || g.Value == nil {
		return ""
	}
	return *g.Value
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetDescription() string {
	if g == nil || g.Description == nil {
		return ""
	}
	return *g.Description
}

// GetIsCrossProject returns the IsCrossProject field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetIsCrossProject() bool {
	if g == nil || g.IsCrossProject == nil {
		return false
	}
	return *g.IsCrossProject
}

// GetIsDeleted returns the IsDeleted field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetIsDeleted() bool {
	if g == nil || g.IsDeleted == nil {
		return false
	}
	return *g.IsDeleted
}

// GetIsGlobalScope returns the IsGlobalScope field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetIsGlobalScope() bool {
	if g == nil || g.IsGlobalScope == nil {
		return false
	}
	return *g.IsGlobalScope
}

// GetIsRestrictedVisible returns the IsRestrictedVisible field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetIsRestrictedVisible() bool {
	if g == nil || g.IsRestrictedVisible == nil {
		return false
	}
	return *g.IsRestrictedVisible
}

// GetLocalScopeID returns the LocalScopeID field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetLocalScopeID() string {
	if g == nil || g.LocalScopeID == nil {
		return ""
	}
	return *g.LocalScopeID
}

// GetScopeID returns the ScopeID field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetScopeID() string {
	if g == nil || g.ScopeID == nil {
		return ""
	}
	return *g.ScopeID
}

// GetScopeName returns the ScopeName field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetScopeName() string {
	if g == nil || g.ScopeName == nil {
		return ""
	}
	return *g.ScopeName
}

// GetScopeType returns the ScopeType field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetScopeType() string {
	if g == nil || g.ScopeType == nil {
		return ""
	}
	return *g.ScopeType
}

// GetSecuringHostID returns the SecuringHostID field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetSecuringHostID() string {
	if g == nil || g.SecuringHostID == nil {
		return ""
	}
	return *g.SecuringHostID
}

// GetSpecialType returns the SpecialType field if it's non-nil, zero value otherwise.
func (g *GraphGroup) GetSpecialType() string {
	if g == nil || g.SpecialType == nil {
		return ""
	}
	return *g.SpecialType
}

// GetDomain returns the Domain field if it's non-nil, zero value otherwise.
func (g *GraphMember) GetDomain() string {
	if g == nil || g.Domain == nil {
		return ""
	}
	return *g.Domain
}

// GetMailAddress returns the MailAddress field if it's non-nil, zero value otherwise.
func (g *GraphMember) GetMailAddress() string {
	if g == nil || g.MailAddress == nil {
		return ""
	}
	return *g.MailAddress
}

// GetPrincipalName returns the PrincipalName field if it's non-nil, zero value otherwise.
func (g *GraphMember) GetPrincipalName() string {
	if g == nil || g.PrincipalName == nil {
		return ""
	}
	return *g.PrincipalName
}

// GetLegacyDescriptor returns the LegacyDescriptor field if it's non-nil, zero value otherwise.
func (g *GraphSubject) GetLegacyDescriptor() string {
	if g == nil || g.LegacyDescriptor == nil {
		return ""
	}
	return *g.LegacyDescriptor
}

// GetOrigin returns the Origin field if it's non-nil, zero value otherwise.
func (g *GraphSubject) GetOrigin() string {
	if g == nil || g.Origin == nil {
		return ""
	}
	return *g.Origin
}

// GetOriginID returns the OriginID field if it's non-nil, zero value otherwise.
func (g *GraphSubject) GetOriginID() string {
	if g == nil || g.OriginID == nil {
		return ""
	}
	return *g.OriginID
}

// GetSubjectKind returns the SubjectKind field if it's non-nil, zero value otherwise.
func (g *GraphSubject) GetSubjectKind() string {
	if g == nil || g.SubjectKind == nil {
		return ""
	}
	return *g.SubjectKind
}

// GetDescriptor returns the Descriptor field if it's non-nil, zero value otherwise.
func (g *GraphSubjectBase) GetDescriptor() string {
	if g == nil || g.Descriptor == nil {
		return ""
	}
	return *g.Descriptor
}

// GetDisplayName returns the DisplayName field if it's non-nil, zero value otherwise.
func (g *GraphSubjectBase) GetDisplayName() string {
	if g == nil || g.DisplayName == nil {
		return ""
	}
	return *g.DisplayName
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (g *GraphSubjectBase) GetURL() string {
	if g == nil || g.URL == nil {
		return ""
	}
	return *g.URL
}

// GetIsDeletedInOrigin returns the IsDeletedInOrigin field if it's non-nil, zero value otherwise.
func (g *GraphUser) GetIsDeletedInOrigin() bool {
	if g == nil || g.IsDeletedInOrigin == nil {
		return false
	}
	return *g.IsDeletedInOrigin
}

// GetMetadataUpdateDate returns the MetadataUpdateDate field.
func (g *GraphUser) GetMetadataUpdateDate() *Time {
	if g == nil {
		return nil
	}
	return g.MetadataUpdateDate
}

// GetMetaType returns the MetaType field if it's non-nil, zero value otherwise.
func (g *GraphUser) GetMetaType() string {
	if g == nil || g.MetaType == nil {
		return ""
	}
	return *g.MetaType
}

// GetDescriptor returns the Descriptor field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDescriptor() string {
	if i == nil || i.Descriptor == nil {
		return ""
	}
	return *i.Descriptor
}

// GetDirectoryAlias returns the DirectoryAlias field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDirectoryAlias() string {
	if i == nil || i.DirectoryAlias == nil {
		return ""
	}
	return *i.DirectoryAlias
}

// GetDisplayName returns the DisplayName field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetDisplayName() string {
	if i == nil || i.DisplayName == nil {
		return ""
	}
	return *i.DisplayName
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetID() string {
	if i == nil || i.ID == nil {
		return ""
	}
	return *i.ID
}

// GetImageURL returns the ImageURL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetImageURL() string {
	if i == nil || i.ImageURL == nil {
		return ""
	}
	return *i.ImageURL
}

// GetInactive returns the Inactive field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetInactive() bool {
	if i == nil || i.Inactive == nil {
		return false
	}
	return *i.Inactive
}

// GetIsAadIdentity returns the IsAadIdentity field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsAadIdentity() bool {
	if i == nil || i.IsAadIdentity == nil {
		return false
	}
	return *i.IsAadIdentity
}

// GetIsContainer returns the IsContainer field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsContainer() bool {
	if i == nil || i.IsContainer == nil {
		return false
	}
	return *i.IsContainer
}

// GetIsDeletedInOrigin returns the IsDeletedInOrigin field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetIsDeletedInOrigin() bool {
	if i == nil || i.IsDeletedInOrigin == nil {
		return false
	}
	return *i.IsDeletedInOrigin
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetLinks() map[string]Link {
	if i == nil || i.Links == nil {
		return map[string]Link{}
	}
	return *i.Links
}

// GetProfileURL returns the ProfileURL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetProfileURL() string {
	if i == nil || i.ProfileURL == nil {
		return ""
	}
	return *i.ProfileURL
}

// GetUniqueName returns the UniqueName field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetUniqueName() string {
	if i == nil || i.UniqueName == nil {
		return ""
	}
	return *i.UniqueName
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (i *IdentityRef) GetURL() string {
	if i == nil || i.URL == nil {
		return ""
	}
	return *i.URL
}

// GetIsRequired returns the IsRequired field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetIsRequired() bool {
	if i == nil || i.IsRequired == nil {
		return false
	}
	return *i.IsRequired
}

// GetReviewerURL returns the ReviewerURL field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetReviewerURL() string {
	if i == nil || i.ReviewerURL == nil {
		return ""
	}
	return *i.ReviewerURL
}

// GetVote returns the Vote field if it's non-nil, zero value otherwise.
func (i *IdentityRefWithVote) GetVote() int {
	if i == nil || i.Vote == nil {
		return 0
	}
	return *i.Vote
}

// GetContent returns the Content field if it's non-nil, zero value otherwise.
func (i *ItemContent) GetContent() string {
	if i == nil || i.Content == nil {
		return ""
	}
	return *i.Content
}

// GetContentType returns the ContentType field.
func (i *ItemContent) GetContentType() *ItemContentType {
	if i == nil {
		return nil
	}
	return i.ContentType
}

// GetBase64Encoded returns the Base64Encoded field if it's non-nil, zero value otherwise.
func (i *ItemContentType) GetBase64Encoded() string {
	if i == nil || i.Base64Encoded == nil {
		return ""
	}
	return *i.Base64Encoded
}

// GetRawText returns the RawText field if it's non-nil, zero value otherwise.
func (i *ItemContentType) GetRawText() string {
	if i == nil || i.RawText == nil {
		return ""
	}
	return *i.RawText
}

// GetEndDate returns the EndDate field if it's non-nil, zero value otherwise.
func (i *Iteration) GetEndDate() string {
	if i == nil || i.EndDate == nil {
		return ""
	}
	return *i.EndDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (i *Iteration) GetID() string {
	if i == nil || i.ID == nil {
		return ""
	}
	return *i.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (i *Iteration) GetName() string {
	if i == nil || i.Name == nil {
		return ""
	}
	return *i.Name
}

// GetPath returns the Path field if it's non-nil, zero value otherwise.
func (i *Iteration) GetPath() string {
	if i == nil || i.Path == nil {
		return ""
	}
	return *i.Path
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (i *Iteration) GetStartDate() string {
	if i == nil || i.StartDate == nil {
		return ""
	}
	return *i.StartDate
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (i *Iteration) GetURL() string {
	if i == nil || i.URL == nil {
		return ""
	}
	return *i.URL
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (i *IterationWorkItems) GetLinks() map[string]Link {
	if i == nil || i.Links == nil {
		return map[string]Link{}
	}
	return *i.Links
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (i *IterationWorkItems) GetURL() string {
	if i == nil || i.URL == nil {
		return ""
	}
	return *i.URL
}

// GetHref returns the Href field if it's non-nil, zero value otherwise.
func (l *Link) GetHref() string {
	if l == nil || l.Href == nil {
		return ""
	}
	return *l.Href
}

// GetCount returns the Count field if it's non-nil, zero value otherwise.
func (l *ListBoardsResponse) GetCount() int {
	if l == nil || l.Count == nil {
		return 0
	}
	return *l.Count
}

// GetHTML returns the HTML field if it's non-nil, zero value otherwise.
func (m *Message) GetHTML() string {
	if m == nil || m.HTML == nil {
		return ""
	}
	return *m.HTML
}

// GetMarkdown returns the Markdown field if it's non-nil, zero value otherwise.
func (m *Message) GetMarkdown() string {
	if m == nil || m.Markdown == nil {
		return ""
	}
	return *m.Markdown
}

// GetText returns the Text field if it's non-nil, zero value otherwise.
func (m *Message) GetText() string {
	if m == nil || m.Text == nil {
		return ""
	}
	return *m.Text
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (p *Project) GetDescription() string {
	if p == nil || p.Description == nil {
		return ""
	}
	return *p.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *Project) GetID() string {
	if p == nil || p.ID == nil {
		return ""
	}
	return *p.ID
}

// GetLastUpdateTime returns the LastUpdateTime field.
func (p *Project) GetLastUpdateTime() *Time {
	if p == nil {
		return nil
	}
	return p.LastUpdateTime
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (p *Project) GetName() string {
	if p == nil || p.Name == nil {
		return ""
	}
	return *p.Name
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (p *Project) GetRevision() int {
	if p == nil || p.Revision == nil {
		return 0
	}
	return *p.Revision
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (p *Project) GetState() string {
	if p == nil || p.State == nil {
		return ""
	}
	return *p.State
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (p *Project) GetURL() string {
	if p == nil || p.URL == nil {
		return ""
	}
	return *p.URL
}

// GetVisibility returns the Visibility field if it's non-nil, zero value otherwise.
func (p *Project) GetVisibility() string {
	if p == nil || p.Visibility == nil {
		return ""
	}
	return *p.Visibility
}

// GetAccount returns the Account field.
func (r *ResourceContainers) GetAccount() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Account
}

// GetCollection returns the Collection field.
func (r *ResourceContainers) GetCollection() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Collection
}

// GetProject returns the Project field.
func (r *ResourceContainers) GetProject() *ResourceRef {
	if r == nil {
		return nil
	}
	return r.Project
}

// GetBaseURL returns the BaseURL field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetBaseURL() string {
	if r == nil || r.BaseURL == nil {
		return ""
	}
	return *r.BaseURL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (r *ResourceRef) GetURL() string {
	if r == nil || r.URL == nil {
		return ""
	}
	return *r.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TaskAgentPoolReference) GetID() int {
	if t == nil || t.ID == nil {
		return 0
	}
	return *t.ID
}

// GetIsHosted returns the IsHosted field if it's non-nil, zero value otherwise.
func (t *TaskAgentPoolReference) GetIsHosted() bool {
	if t == nil || t.IsHosted == nil {
		return false
	}
	return *t.IsHosted
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *TaskAgentPoolReference) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetPlanID returns the PlanID field if it's non-nil, zero value otherwise.
func (t *TaskOrchestrationPlanReference) GetPlanID() string {
	if t == nil || t.PlanID == nil {
		return ""
	}
	return *t.PlanID
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (t *TaskOrchestrationPlanReference) GetType() int {
	if t == nil || t.Type == nil {
		return 0
	}
	return *t.Type
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (t *Team) GetDescription() string {
	if t == nil || t.Description == nil {
		return ""
	}
	return *t.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *Team) GetID() string {
	if t == nil || t.ID == nil {
		return ""
	}
	return *t.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *Team) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *Team) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetID() string {
	if t == nil || t.ID == nil {
		return ""
	}
	return *t.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *TeamProjectCollectionReference) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetAbbreviation returns the Abbreviation field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetAbbreviation() string {
	if t == nil || t.Abbreviation == nil {
		return ""
	}
	return *t.Abbreviation
}

// GetDefaultTeamImageURL returns the DefaultTeamImageURL field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetDefaultTeamImageURL() string {
	if t == nil || t.DefaultTeamImageURL == nil {
		return ""
	}
	return *t.DefaultTeamImageURL
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetDescription() string {
	if t == nil || t.Description == nil {
		return ""
	}
	return *t.Description
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetID() string {
	if t == nil || t.ID == nil {
		return ""
	}
	return *t.ID
}

// GetLastUpdateTime returns the LastUpdateTime field.
func (t *TeamProjectReference) GetLastUpdateTime() *Time {
	if t == nil {
		return nil
	}
	return t.LastUpdateTime
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetRevision() int {
	if t == nil || t.Revision == nil {
		return 0
	}
	return *t.Revision
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetState() string {
	if t == nil || t.State == nil {
		return ""
	}
	return *t.State
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetVisibility returns the Visibility field if it's non-nil, zero value otherwise.
func (t *TeamProjectReference) GetVisibility() string {
	if t == nil || t.Visibility == nil {
		return ""
	}
	return *t.Visibility
}

// GetMine returns the Mine field if it's non-nil, zero value otherwise.
func (t *TeamsListOptions) GetMine() bool {
	if t == nil || t.Mine == nil {
		return false
	}
	return *t.Mine
}

// GetSkip returns the Skip field if it's non-nil, zero value otherwise.
func (t *TeamsListOptions) GetSkip() int {
	if t == nil || t.Skip == nil {
		return 0
	}
	return *t.Skip
}

// GetTop returns the Top field if it's non-nil, zero value otherwise.
func (t *TeamsListOptions) GetTop() int {
	if t == nil || t.Top == nil {
		return 0
	}
	return *t.Top
}

// GetCompletedDate returns the CompletedDate field if it's non-nil, zero value otherwise.
func (t *Test) GetCompletedDate() string {
	if t == nil || t.CompletedDate == nil {
		return ""
	}
	return *t.CompletedDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *Test) GetID() int {
	if t == nil || t.ID == nil {
		return 0
	}
	return *t.ID
}

// GetIsAutomated returns the IsAutomated field if it's non-nil, zero value otherwise.
func (t *Test) GetIsAutomated() bool {
	if t == nil || t.IsAutomated == nil {
		return false
	}
	return *t.IsAutomated
}

// GetIteration returns the Iteration field if it's non-nil, zero value otherwise.
func (t *Test) GetIteration() string {
	if t == nil || t.Iteration == nil {
		return ""
	}
	return *t.Iteration
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *Test) GetName() string {
	if t == nil || t.Name == nil {
		return ""
	}
	return *t.Name
}

// GetRevision returns the Revision field if it's non-nil, zero value otherwise.
func (t *Test) GetRevision() int {
	if t == nil || t.Revision == nil {
		return 0
	}
	return *t.Revision
}

// GetStartedDate returns the StartedDate field if it's non-nil, zero value otherwise.
func (t *Test) GetStartedDate() string {
	if t == nil || t.StartedDate == nil {
		return ""
	}
	return *t.StartedDate
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (t *Test) GetState() string {
	if t == nil || t.State == nil {
		return ""
	}
	return *t.State
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (t *Test) GetURL() string {
	if t == nil || t.URL == nil {
		return ""
	}
	return *t.URL
}

// GetBuildURI returns the BuildURI field if it's non-nil, zero value otherwise.
func (t *TestsListOptions) GetBuildURI() string {
	if t == nil || t.BuildURI == nil {
		return ""
	}
	return *t.BuildURI
}

// GetCount returns the Count field if it's non-nil, zero value otherwise.
func (t *TestsListOptions) GetCount() int {
	if t == nil || t.Count == nil {
		return 0
	}
	return *t.Count
}

// GetCiMessage returns the CiMessage field if it's non-nil, zero value otherwise.
func (t *TriggerInfo) GetCiMessage() string {
	if t == nil || t.CiMessage == nil {
		return ""
	}
	return *t.CiMessage
}

// GetCiSourceBranch returns the CiSourceBranch field if it's non-nil, zero value otherwise.
func (t *TriggerInfo) GetCiSourceBranch() string {
	if t == nil || t.CiSourceBranch == nil {
		return ""
	}
	return *t.CiSourceBranch
}

// GetCiSourceSha returns the CiSourceSha field if it's non-nil, zero value otherwise.
func (t *TriggerInfo) GetCiSourceSha() string {
	if t == nil || t.CiSourceSha == nil {
		return ""
	}
	return *t.CiSourceSha
}

// GetIsLocked returns the IsLocked field if it's non-nil, zero value otherwise.
func (u *UpdateRefsBody) GetIsLocked() bool {
	if u == nil || u.IsLocked == nil {
		return false
	}
	return *u.IsLocked
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (u *UpdateRefsBody) GetName() string {
	if u == nil || u.Name == nil {
		return ""
	}
	return *u.Name
}

// GetNewObjectID returns the NewObjectID field if it's non-nil, zero value otherwise.
func (u *UpdateRefsBody) GetNewObjectID() string {
	if u == nil || u.NewObjectID == nil {
		return ""
	}
	return *u.NewObjectID
}

// GetOldObjectID returns the OldObjectID field if it's non-nil, zero value otherwise.
func (u *UpdateRefsBody) GetOldObjectID() string {
	if u == nil || u.OldObjectID == nil {
		return ""
	}
	return *u.OldObjectID
}

// GetRepositoryID returns the RepositoryID field if it's non-nil, zero value otherwise.
func (u *UpdateRefsBody) GetRepositoryID() string {
	if u == nil || u.RepositoryID == nil {
		return ""
	}
	return *u.RepositoryID
}

// GetMessage returns the Message field if it's non-nil, zero value otherwise.
func (v *ValidationResult) GetMessage() string {
	if v == nil || v.Message == nil {
		return ""
	}
	return *v.Message
}

// GetResult returns the Result field if it's non-nil, zero value otherwise.
func (v *ValidationResult) GetResult() string {
	if v == nil || v.Result == nil {
		return ""
	}
	return *v.Result
}

// GetActive returns the Active field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetActive() bool {
	if w == nil || w.Active == nil {
		return false
	}
	return *w.Active
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetID() string {
	if w == nil || w.ID == nil {
		return ""
	}
	return *w.ID
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetName() string {
	if w == nil || w.Name == nil {
		return ""
	}
	return *w.Name
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WebAPITagDefinition) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetCommentVersionRef returns the CommentVersionRef field.
func (w *WorkItem) GetCommentVersionRef() *CommentVersionRef {
	if w == nil {
		return nil
	}
	return w.CommentVersionRef
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetLinks() map[string]Link {
	if w == nil || w.Links == nil {
		return map[string]Link{}
	}
	return *w.Links
}

// GetRev returns the Rev field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetRev() int {
	if w == nil || w.Rev == nil {
		return 0
	}
	return *w.Rev
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItem) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetCreatedBy returns the CreatedBy field.
func (w *WorkItemComment) GetCreatedBy() *IdentityRef {
	if w == nil {
		return nil
	}
	return w.CreatedBy
}

// GetCreatedDate returns the CreatedDate field.
func (w *WorkItemComment) GetCreatedDate() *Time {
	if w == nil {
		return nil
	}
	return w.CreatedDate
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItemComment) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetModifiedBy returns the ModifiedBy field.
func (w *WorkItemComment) GetModifiedBy() *IdentityRef {
	if w == nil {
		return nil
	}
	return w.ModifiedBy
}

// GetModifiedDate returns the ModifiedDate field.
func (w *WorkItemComment) GetModifiedDate() *Time {
	if w == nil {
		return nil
	}
	return w.ModifiedDate
}

// GetText returns the Text field if it's non-nil, zero value otherwise.
func (w *WorkItemComment) GetText() string {
	if w == nil || w.Text == nil {
		return ""
	}
	return *w.Text
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemComment) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetVersion returns the Version field if it's non-nil, zero value otherwise.
func (w *WorkItemComment) GetVersion() int {
	if w == nil || w.Version == nil {
		return 0
	}
	return *w.Version
}

// GetWorkItemID returns the WorkItemID field if it's non-nil, zero value otherwise.
func (w *WorkItemComment) GetWorkItemID() int {
	if w == nil || w.WorkItemID == nil {
		return 0
	}
	return *w.WorkItemID
}

// GetContinuationToken returns the ContinuationToken field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetContinuationToken() string {
	if w == nil || w.ContinuationToken == nil {
		return ""
	}
	return *w.ContinuationToken
}

// GetCount returns the Count field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetCount() int {
	if w == nil || w.Count == nil {
		return 0
	}
	return *w.Count
}

// GetLinks returns the Links field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetLinks() map[string]Link {
	if w == nil || w.Links == nil {
		return map[string]Link{}
	}
	return *w.Links
}

// GetNextPage returns the NextPage field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetNextPage() string {
	if w == nil || w.NextPage == nil {
		return ""
	}
	return *w.NextPage
}

// GetTotalCount returns the TotalCount field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetTotalCount() int {
	if w == nil || w.TotalCount == nil {
		return 0
	}
	return *w.TotalCount
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemCommentList) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetRel returns the Rel field if it's non-nil, zero value otherwise.
func (w *WorkItemLink) GetRel() string {
	if w == nil || w.Rel == nil {
		return ""
	}
	return *w.Rel
}

// GetSource returns the Source field.
func (w *WorkItemLink) GetSource() *WorkItemReference {
	if w == nil {
		return nil
	}
	return w.Source
}

// GetTarget returns the Target field.
func (w *WorkItemLink) GetTarget() *WorkItemReference {
	if w == nil {
		return nil
	}
	return w.Target
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItemReference) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemReference) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetRel returns the Rel field if it's non-nil, zero value otherwise.
func (w *WorkItemRelation) GetRel() string {
	if w == nil || w.Rel == nil {
		return ""
	}
	return *w.Rel
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemRelation) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetFields returns the Fields field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetFields() map[string]WorkItemFieldUpdate {
	if w == nil || w.Fields == nil {
		return map[string]WorkItemFieldUpdate{}
	}
	return *w.Fields
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetID() int {
	if w == nil || w.ID == nil {
		return 0
	}
	return *w.ID
}

// GetRelations returns the Relations field.
func (w *WorkItemUpdate) GetRelations() *WorkItemRelationUpdates {
	if w == nil {
		return nil
	}
	return w.Relations
}

// GetRev returns the Rev field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetRev() int {
	if w == nil || w.Rev == nil {
		return 0
	}
	return *w.Rev
}

// GetRevisedBy returns the RevisedBy field.
func (w *WorkItemUpdate) GetRevisedBy() *IdentityRef {
	if w == nil {
		return nil
	}
	return w.RevisedBy
}

// GetRevisedDate returns the RevisedDate field.
func (w *WorkItemUpdate) GetRevisedDate() *Time {
	if w == nil {
		return nil
	}
	return w.RevisedDate
}

// GetURL returns the URL field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetURL() string {
	if w == nil || w.URL == nil {
		return ""
	}
	return *w.URL
}

// GetWorkItemID returns the WorkItemID field if it's non-nil, zero value otherwise.
func (w *WorkItemUpdate) GetWorkItemID() int {
	if w == nil || w.WorkItemID == nil {
		return 0
	}
	return *w.WorkItemID
}
